(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces.sh")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace.sh")

(defpoll time :interval "1s" "date '+%I:%M %p'")


;; ----------------------------------------------------------------------------
(defwidget nixosLogo []
  (box :class "nixosLogo"
    (image :path "${EWW_CONFIG_DIR}/assets/nixos.png"
           :image-width 24
           :image-height 24)))

;; hyprland workspaces
(defwidget workspaces []
  (box :space-evenly false
    (label :text "${workspaces}${current_workspace}" :visible false)
      (for workspace in workspaces
        (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
          (box :class "workspaces ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
            (label :text "${workspace.id == current_workspace ? "" : ""}"))))))

(defwidget desktop []
  (box :class "desktop"
    (label :text "NixOS")))

(defwidget clock []
  (box :class "clock"
    (label :text "${time}")))


;; ----------------------------------------------------------------------------
(defwidget leftBox []
  (box :class "leftBox"
       :halign "start"
       :space-evenly false
       (nixosLogo)
       (workspaces)))

(defwidget centerBox []
  (box :class "centerBox"
       :halign "center"
       (desktop)))

(defwidget rightBox []
  (box :class "rightBox"
       :halign "end"
       (clock)))

(defwidget eww []
  (box :class "eww"
       (leftBox)
       (centerBox)
       (rightBox)))


;; ----------------------------------------------------------------------------
(defwindow bar
  ;; Which monitor this window should be displayed on.
  :monitor 0
  ;; Geometry of the window.
  :geometry (geometry :x "0%"
                      :y "0px"
                      :width "100%"
                      :height "30px"
                      :anchor "top center")
  ;; Where the window should appear in the stack. Possible values: fg, bg.
  :stacking "bg"
  ;; Whether the compositor should reserve space for the window automatically.
  :exclusive true
  (eww))
